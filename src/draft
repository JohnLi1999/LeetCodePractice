public static List<List<Integer>> levelOrder(TreeNode root) {
    List<List<Integer>> result = new ArrayList<>();
    Map<Integer, List> map = new TreeMap<>();

    DFS(root, 0, map);

    for (Integer i : map.keySet()) {
        result.add(map.get(i));
    }

    return result;
}

private static void DFS(TreeNode root, int level, Map<Integer, List> map) {
    if (root == null) {
        return;
    }

    if (!map.containsKey(level)) {
        List<Integer> list = new ArrayList<>();
        list.add(root.val);
        map.put(level, list);
    } else {
        map.get(level).add(root.val);
    }

    DFS(root.left, level + 1, map);
    DFS(root.right, level + 1, map);
}