public static int threeSumClosest(int[] nums, int target) {
    Arrays.sort(nums);
    int minDiff = Integer.MAX_VALUE;

    for (int i = 0; i < nums.length - 2; i++) {
        minDiff = twoSumClosest(nums, i, target, minDiff);
        if (minDiff == 0) break;
    }

    return target + minDiff;
}

public static int twoSumClosest(int[] nums, int i, int target, int currMinDiff) {
    int low = i + 1, high = nums.length - 1;
    int minDiff = currMinDiff;

    while (low < high) {
        int sum = nums[i] + nums[low] + nums[high];
        int diff = sum - target;

        if (diff == 0) {
            return diff;
        } else {
            if (Math.abs(diff) < Math.abs(currMinDiff)) {
                minDiff = diff;
            }

            if (diff > 0) {
                high--;
            } else if (diff < 0) {
                low++;
            }
        }
    }

    return minDiff;
}